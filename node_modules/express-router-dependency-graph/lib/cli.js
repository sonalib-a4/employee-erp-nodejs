"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.cli = void 0;
const meow_1 = __importDefault(require("meow"));
const path = __importStar(require("path"));
const index_1 = require("./index");
exports.cli = (0, meow_1.default)(`
    Usage
      $ express-router-dependency-graph --rootDir=path/to/project
 
    Options
      --includeOnly           [String] only include modules satisfying a pattern. https://github.com/sverweij/dependency-cruiser/blob/develop/doc/cli.md#--include-only-only-include-modules-satisfying-a-pattern 
      --doNotFollow           [String] don't cruise modules adhering to this pattern any further. https://github.com/sverweij/dependency-cruiser/blob/develop/doc/cli.md#./options-reference.md#donotfollow-dont-cruise-modules-any-further
      --rootDir               [Path:String] path to root dir of source code [required]
      --rootBaseUrl           [Path:String] if pass it, replace rootDir with rootDirBaseURL in output.
      --format                ["json" | "markdown"] output format. Default: json

    Examples
      $ express-router-dependency-graph --rootDir=./
`, {
    flags: {
        rootDir: {
            type: "string",
            isRequired: true
        },
        rootBaseUrl: {
            type: "string",
            default: ""
        },
        includeOnly: {
            type: "string",
            isMultiple: true
        },
        doNotFollow: {
            type: "string",
            isMultiple: true,
            default: ["^node_modules"]
        },
        format: {
            type: "string",
            default: "json"
        }
    },
    autoHelp: true,
    autoVersion: true
});
const run = async (_input = exports.cli.input, flags = exports.cli.flags) => {
    const result = await (0, index_1.analyzeDependency)({
        rootDir: path.resolve(process.cwd(), flags.rootDir),
        rootBaseUrl: flags.rootBaseUrl,
        outputFormat: flags.format,
        includeOnly: flags.includeOnly,
        doNotFollow: flags.doNotFollow
    });
    return {
        stdout: flags.format === "json" ? JSON.stringify(result) : result,
        stderr: null,
        exitStatus: 0
    };
};
exports.run = run;
//# sourceMappingURL=cli.js.map